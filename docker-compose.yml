services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.3
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT_INTERNAL

  postgres:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # НОВАЯ СЕКЦИЯ: Проверка готовности базы данных
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # СЕРВИС С ВАШИМ ПРИЛОЖЕНИЕМ
  app:
    build: .
    restart: on-failure
    ports:
      - "8080:8080"
    # НОВАЯ СЕКЦИЯ: Указываем, что нужно дождаться готовности postgres
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_started # Kafka не имеет healthcheck, ждем просто запуска
    # НОВАЯ СЕКЦИЯ: Передаем правильные адреса в приложение
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/analytics
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      
volumes:
  postgres_data: